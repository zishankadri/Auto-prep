"""
Django settings for project project.

Generated by 'django-admin startproject' using Django 4.2.7.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Cloudinary imports
import cloudinary
import cloudinary.uploader
import cloudinary.api

import environ
import os

env = environ.Env()
environ.Env.read_env()


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-ft%5b1%m)opcxais&hk)c=vd%hv&=v)ylmd&jv6t+m^6xrjztv'

# SECURITY WARNING: don't run with debug turned on in production!
# DEBUG = env("DEBUG", default=False)
DEBUG = os.environ['DEBUG'].lower() == "true"
DEV_ENVIROMENT = os.environ['DEV_ENVIROMENT'].lower() == "true"


ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'paypal.standard.ipn',  # PayPal
    
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'compressor',

    'accounts',
    'core',
    'courses',
    'MCQs',
    'customadmin',

    'cloudinary',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'project.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [ 
            os.path.join(BASE_DIR, "templates"),
            os.path.join(BASE_DIR, "accounts", "templates"),
            os.path.join(BASE_DIR, "courses", "templates"),
            os.path.join(BASE_DIR, "customadmin", "templates"),
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'project.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': BASE_DIR / 'db.sqlite3',
#     }
# }

# PostegreSQL database (Local)

if not DEV_ENVIROMENT:
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.postgresql_psycopg2',
            'NAME': 'teachers_db', 
            'USER': 'zishan',
            'PASSWORD': 'zishan',
            'HOST': '127.0.0.1', 
            'PORT': '5432',
        }
    }
else:
    # Render PostgreSQL databse (Live)
    import dj_database_url

    DATABASES = {
        # 'default': dj_database_url.parse(env('DATABASE_URL')),
        'default': dj_database_url.parse(os.getenv('DATABASE_URL')),
    }

# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = 'static/'
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static'),
    os.path.join(BASE_DIR, "accounts", "static"),
    os.path.join(BASE_DIR, "customadmin", "static"),
]

STATIC_ROOT = BASE_DIR / "staticfiles"

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
AUTH_USER_MODEL = "accounts.UserAccount"

# Media files
MEDIA_ROOT = os.path.join(BASE_DIR, "media")
MEDIA_URL = '/media/'


# Tailwind CSS
COMPRESS_ROOT = BASE_DIR / 'static'
COMPRESS_ENABLED = True


STATICFILES_FINDERS = (
    'django.contrib.staticfiles.finders.FileSystemFinder',
    'django.contrib.staticfiles.finders.AppDirectoriesFinder',
    'compressor.finders.CompressorFinder',
)

# White Noise
STORAGES = {
    "staticfiles": {
        # "BACKEND": "whitenoise.storage.CompressedManifestStaticFilesStorage",
        "BACKEND": "whitenoise.storage.CompressedStaticFilesStorage",
    },
    'default': {
        'BACKEND': 'django.core.files.storage.FileSystemStorage',
        'OPTIONS': {
            'location': BASE_DIR / 'media',
        },
    },
}


# Send Email
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend' # Default
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_USE_TLS = True
EMAIL_PORT = 587
EMAIL_HOST_USER = os.getenv('EMAIL_HOST_USER')
EMAIL_HOST_PASSWORD = os.getenv('EMAIL_HOST_PASSWORD') # This is the app password created from google account > security > app password


# PayPal Integration
PAYPAL_RECEIVER_EMAIL = os.getenv('PAYPAL_RECEIVER_EMAIL')
PAYPAL_TEST = True

MONTHLY_PRICE = 10
YEARLY_PRICE = 100

DEFAUL_DOMAIN = "teachers-app.onrender.com"
SITE_NAME = "site-name"

# Cloudingary - Djanog integration
cloudinary.config(
    cloud_name = "dfuupz7rh",
    api_key = "747535543642996",
    api_secret = "b-CwIGz8S-VqALmYkuOZCM1XwGM",
)

